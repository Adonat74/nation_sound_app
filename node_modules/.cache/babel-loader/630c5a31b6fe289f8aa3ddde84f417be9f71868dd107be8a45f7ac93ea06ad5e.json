{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bureau\\\\Projet MSRP\\\\nation_sound_app\\\\src\\\\Components\\\\Carte\\\\Carte.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MapContainer, Marker, Popup, ImageOverlay } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { LatLngBounds, CRS, Icon } from \"leaflet\";\nimport \"./Carte.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Carte() {\n  _s();\n  const bounds = new LatLngBounds([0, 0], [500, 1000]);\n  const [catFilter, setCatFilter] = React.useState(\"\");\n  const [mapData, setMapData] = React.useState([]);\n  const [sceneData, setSceneData] = React.useState([]);\n  function handleChangeCat(event) {\n    setCatFilter(() => {\n      return event.target.value;\n    });\n  }\n  ;\n  let catQuery = catFilter === \"\" ? \"\" : `?filter[field_categorie]=${catFilter}`;\n  React.useEffect(() => {\n    fetch(`http://localhost/drupal10/jsonapi/node/lieux${catQuery}`).then(res => res.json()).then(data => setMapData(data.data));\n  }, [catFilter]);\n  React.useEffect(() => {\n    fetch(`http://localhost/drupal10/jsonapi/node/artistes?limit=2`).then(res => res.json()).then(data => setSceneData(data.data));\n  }, []);\n  const markers = mapData.map(data => {\n    const title = data.attributes.title;\n    const sceneNumber = title[title.length - 1];\n    const customIcon = new Icon({\n      iconUrl: `/images/icons/pin-${data.attributes.field_categorie}.svg`,\n      iconSize: [35, 35]\n    });\n    const scene = sceneData.map(scene => {\n      if (scene.attributes.field_scene == parseInt(sceneNumber)) {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: scene.attributes.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Marker, {\n      position: [data.attributes.field_lat, data.attributes.field_lng],\n      icon: customIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: data.attributes.field_categorie === \"scene\" ? `/programmation` : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.attributes.field_categorie === \"scene\" ? \"\" : data.attributes.field_description_lieu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), scene]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: catFilter,\n        onChange: handleChangeCat,\n        name: \"catChoice\",\n        className: \"catFilter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Toutes les cat\\xE9gories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"scene\",\n          children: \"Sc\\xE8nes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"restauration\",\n          children: \"Restauration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"buvette\",\n          children: \"Buvettes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"toilettes\",\n          children: \"Toilettes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [250, 500],\n      zoom: 0,\n      maxZoom: 3,\n      scrollWheelZoom: true,\n      crs: CRS.Simple,\n      children: [/*#__PURE__*/_jsxDEV(ImageOverlay, {\n        url: \"images/map.png\",\n        bounds: bounds,\n        zIndex: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), markers]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Carte, \"XgYUWcLeHqiloJUVjqmuc8KK8VQ=\");\n_c = Carte;\nvar _c;\n$RefreshReg$(_c, \"Carte\");","map":{"version":3,"names":["React","Link","MapContainer","Marker","Popup","ImageOverlay","LatLngBounds","CRS","Icon","jsxDEV","_jsxDEV","Carte","_s","bounds","catFilter","setCatFilter","useState","mapData","setMapData","sceneData","setSceneData","handleChangeCat","event","target","value","catQuery","useEffect","fetch","then","res","json","data","markers","map","title","attributes","sceneNumber","length","customIcon","iconUrl","field_categorie","iconSize","scene","field_scene","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","position","field_lat","field_lng","icon","to","field_description_lieu","id","className","onChange","name","center","zoom","maxZoom","scrollWheelZoom","crs","Simple","url","zIndex","_c","$RefreshReg$"],"sources":["C:/Bureau/Projet MSRP/nation_sound_app/src/Components/Carte/Carte.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MapContainer, Marker, Popup, ImageOverlay } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { LatLngBounds, CRS, Icon } from \"leaflet\";\r\nimport \"./Carte.css\";\r\n\r\nexport default function Carte () {\r\n\r\n    const bounds = new LatLngBounds([0, 0], [500, 1000]);\r\n\r\n    const [catFilter, setCatFilter] = React.useState(\"\");\r\n    const [mapData, setMapData] = React.useState([]);\r\n    const [sceneData, setSceneData] = React.useState([]);\r\n    \r\n\r\n    function handleChangeCat (event) {\r\n        setCatFilter(() => {\r\n            return event.target.value\r\n        });\r\n    };\r\n\r\n\r\n    let catQuery = catFilter === \"\" ? \"\" : `?filter[field_categorie]=${catFilter}`;\r\n\r\n    React.useEffect(() => {\r\n        fetch(`http://localhost/drupal10/jsonapi/node/lieux${catQuery}`)\r\n            .then(res => res.json())\r\n            .then(data => setMapData(data.data));\r\n    }, [catFilter]);\r\n\r\n    React.useEffect(() => {\r\n        fetch(`http://localhost/drupal10/jsonapi/node/artistes?limit=2`)\r\n            .then(res => res.json())\r\n            .then(data => setSceneData(data.data));\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const markers = mapData.map(data => {\r\n\r\n        const title = data.attributes.title;\r\n        const sceneNumber = title[title.length - 1];\r\n\r\n        const customIcon = new Icon({\r\n            iconUrl: `/images/icons/pin-${data.attributes.field_categorie}.svg`,\r\n            iconSize: [35, 35]\r\n        });\r\n\r\n        const scene = sceneData.map(scene => {\r\n            if (scene.attributes.field_scene == parseInt(sceneNumber)) {\r\n                return  (\r\n                    <p>\r\n                        {scene.attributes.title}\r\n                    </p>\r\n                );\r\n            }\r\n        });\r\n\r\n        \r\n        return (\r\n            <Marker position={[data.attributes.field_lat, data.attributes.field_lng]} icon={customIcon}>\r\n                <Popup>\r\n                    <Link to={data.attributes.field_categorie === \"scene\" ? `/programmation` : \"\"}>\r\n                        <h2>{title}</h2>\r\n                        <p>{data.attributes.field_categorie === \"scene\" ? \"\" : data.attributes.field_description_lieu}</p>\r\n                        {scene}\r\n                    </Link>\r\n                </Popup>\r\n            </Marker>\r\n        );\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div id=\"map\">\r\n            <div className=\"filter\">\r\n                <select\r\n                value={catFilter}\r\n                onChange={handleChangeCat}\r\n                name=\"catChoice\"\r\n                className=\"catFilter\">\r\n                    <option value=\"\">Toutes les catégories</option>\r\n                    <option value=\"scene\">Scènes</option>\r\n                    <option value=\"restauration\">Restauration</option>\r\n                    <option value=\"buvette\">Buvettes</option>\r\n                    <option value=\"toilettes\">Toilettes</option>\r\n                </select>\r\n            </div>\r\n\r\n\r\n\r\n            <MapContainer center={[250, 500]} zoom={0} maxZoom={3} scrollWheelZoom={true} crs={CRS.Simple}>\r\n                <ImageOverlay\r\n                    url=\"images/map.png\"\r\n                    bounds={bounds}\r\n                    zIndex={10}                  \r\n                />\r\n                {markers}  \r\n            </MapContainer>\r\n        </div>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}